{
  "openapi": "3.1.0",
  "servers": [
    {
      "url": "{scheme}://{host}/api/v1",
      "variables": {
        "scheme": {
          "enum": [
            "https",
            "http"
          ],
          "default": "https"
        },
        "host": {
          "default": "localhost:3000"
        }
      }
    },
    {
      "url": "/api/v1"
    }
  ],
  "info": {
    "version": "0.0.1",
    "title": "mycelia-api",
    "description": "",
    "license": {
      "name": "Apache-2.0"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "getHello"
        ],
        "x-samchon-controller": "AppController"
      }
    },
    "/settings": {
      "get": {
        "summary": "User settings and schedule overview",
        "description": "User settings and schedule overview.\n- 現在の設定と次回実行予定、直近の実行履歴概要を返します。",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "settings",
          "getSettings"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/schedule/reload": {
      "post": {
        "summary": "Reload schedule (central scheduler; immediate effect)",
        "description": "Reload schedule (central scheduler; immediate effect).",
        "tags": [],
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "schedule",
          "reload",
          "reloadMySchedule"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/schedule/preview": {
      "post": {
        "summary": "Preview next run times at a given JST time",
        "description": "Preview next run times at a given JST time.\n- 安定ジッター＋固定オフセットを考慮したサマリ/ポッドキャストの次回時刻を試算。",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "schedule",
          "preview",
          "previewSchedule"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/jobs/status": {
      "get": {
        "summary": "Today's summary → script → podcast progress",
        "description": "Today's summary → script → podcast progress.",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "jobs",
          "status",
          "jobsStatus"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/settings/summary": {
      "put": {
        "summary": "Update summary feature enabled/disabled",
        "description": "Update summary feature enabled/disabled.\n- 中央スケジューラにより即時反映（安定ジッター適用）。",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "settings",
          "summary",
          "updateSummarySetting"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/settings/podcast": {
      "put": {
        "summary": "Update podcast settings (enabled/time/language)",
        "description": "Update podcast settings (enabled/time/language).\n- 指定時刻（JST）＋安定ジッター、要約実行の+10分後に実施。",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "settings",
          "podcast",
          "updatePodcastSetting"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/summaries/run-now": {
      "post": {
        "summary": "Enqueue today's summary → script → podcast flow immediately (idempotent)",
        "description": "Enqueue today's summary → script → podcast flow immediately (idempotent).",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "summaries",
          "run_now",
          "runSummaryNow"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/podcasts/run-now": {
      "post": {
        "summary": "Enqueue podcast generation for today if a summary exists (idempotent)",
        "description": "Enqueue podcast generation for today if a summary exists (idempotent).",
        "tags": [],
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcasts",
          "run_now",
          "runPodcastNow"
        ],
        "x-samchon-controller": "SettingsController"
      }
    },
    "/typed-poc/ping": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "x-samchon-accessor": [
          "typed_poc",
          "ping"
        ],
        "x-samchon-controller": "TypedPocController"
      }
    },
    "/health": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "health",
          "checkHealth"
        ],
        "x-samchon-controller": "HealthController"
      }
    },
    "/embeddings/batch-update": {
      "post": {
        "description": "Trigger batch embedding update",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "embeddings",
          "batch_update",
          "triggerBatchUpdate"
        ],
        "x-samchon-controller": "EmbeddingController"
      }
    },
    "/embeddings/progress": {
      "get": {
        "description": "Get current progress of batch embedding updates",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "embeddings",
          "progress",
          "getBatchProgress"
        ],
        "x-samchon-controller": "EmbeddingController"
      }
    },
    "/jobs/failed": {
      "get": {
        "description": "List failed jobs for current user in a queue",
        "tags": [],
        "parameters": [
          {
            "name": "queue",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "embeddingQueue"
                },
                {
                  "const": "summary-generate"
                },
                {
                  "const": "script-generate"
                },
                {
                  "const": "podcastQueue"
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "jobs",
          "failed",
          "listFailed"
        ],
        "x-samchon-controller": "JobsAdminController"
      }
    },
    "/jobs/{jobId}/retry": {
      "post": {
        "description": "Retry a specific failed job if it belongs to the user",
        "tags": [],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "queue",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "embeddingQueue"
                },
                {
                  "const": "summary-generate"
                },
                {
                  "const": "script-generate"
                },
                {
                  "const": "podcastQueue"
                }
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "jobs",
          "retry",
          "retryJob"
        ],
        "x-samchon-controller": "JobsAdminController"
      }
    },
    "/jobs/failed/retry": {
      "post": {
        "description": "Retry all failed jobs for current user in the queue",
        "tags": [],
        "parameters": [
          {
            "name": "queue",
            "in": "query",
            "schema": {
              "oneOf": [
                {
                  "const": "embeddingQueue"
                },
                {
                  "const": "summary-generate"
                },
                {
                  "const": "script-generate"
                },
                {
                  "const": "podcastQueue"
                }
              ]
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "jobs",
          "failed",
          "retry",
          "retryAll"
        ],
        "x-samchon-controller": "JobsAdminController"
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "signup",
          "signUp"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/login": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "login",
          "signIn"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/forgot-password": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "forgot_password",
          "forgotPassword"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "reset_password",
          "resetPassword"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/verify-email": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "verify_email",
          "verifyEmail"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "logout",
          "signOut"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "refresh"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/delete": {
      "delete": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "$delete",
          "deleteAccount"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/update-email": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "update_email",
          "updateEmail"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/update-username": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "update_username",
          "updateUsername"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/update-password": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "update_password",
          "updatePassword"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "profile",
          "getProfile"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/verify-totp": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "verify_totp",
          "verifyTotp"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/totp/verify": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "totp",
          "verify",
          "verifyTotpNew"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/webauthn/register": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "webauthn",
          "register",
          "startWebAuthnRegistration"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/webauthn/callback": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "webauthn",
          "callback",
          "finishWebAuthnRegistration"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/webauthn/verify": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "webauthn",
          "verify",
          "verifyWebAuthnAssertion"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/totp/enroll": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "totp",
          "enroll",
          "enrollTotp"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/auth/mfa/totp/disable": {
      "patch": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "auth",
          "mfa",
          "totp",
          "disable",
          "disableTotp"
        ],
        "x-samchon-controller": "AuthController"
      }
    },
    "/tags": {
      "get": {
        "summary": "Get all tags for current user",
        "description": "Get all tags for current user.\n- 認証ユーザーの全タグ一覧を返します。",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "getAllTags"
        ],
        "x-samchon-controller": "TagController"
      },
      "post": {
        "summary": "Create a new tag",
        "description": "Create a new tag.\n- `tagName`は必須、`parentTagId`は任意。",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "createTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}": {
      "patch": {
        "summary": "Update a tag",
        "description": "Update a tag.\n- 指定IDのタグ名や親タグを変更します。",
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "updateTag"
        ],
        "x-samchon-controller": "TagController"
      },
      "delete": {
        "summary": "Delete a tag",
        "description": "Delete a tag.\n- 指定IDのタグを削除します。",
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "deleteTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/feed-items/{feedItemId}": {
      "get": {
        "summary": "Get tags for a feed item",
        "description": "Get tags for a feed item.\n- 指定フィードアイテムに付与されたタグ一覧。",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "feed_items",
          "getFeedItemTags"
        ],
        "x-samchon-controller": "TagController"
      },
      "post": {
        "summary": "Attach a tag to a feed item",
        "description": "Attach a tag to a feed item.\n- 指定フィードアイテムにタグを付与します。",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "feed_items",
          "attachTagToFeedItem"
        ],
        "x-samchon-controller": "TagController"
      },
      "delete": {
        "summary": "Detach a tag from a feed item",
        "description": "Detach a tag from a feed item.\n- クエリ`tagId`で分離対象タグを指定。",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "tagId",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "feed_items",
          "detachTagFromFeedItem"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/subscriptions/{subscriptionId}": {
      "get": {
        "summary": "Get tags for a subscription",
        "description": "Get tags for a subscription.\n- 指定購読に付与されたタグ一覧。",
        "tags": [],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subscriptions",
          "getSubscriptionTags"
        ],
        "x-samchon-controller": "TagController"
      },
      "post": {
        "summary": "Attach a tag to a subscription",
        "description": "Attach a tag to a subscription.",
        "tags": [],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subscriptions",
          "attachTagToSubscription"
        ],
        "x-samchon-controller": "TagController"
      },
      "delete": {
        "summary": "Detach a tag from a subscription",
        "description": "Detach a tag from a subscription.",
        "tags": [],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "tagId",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subscriptions",
          "detachTagFromSubscription"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/hierarchical": {
      "post": {
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "hierarchical",
          "createHierarchicalTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/hierarchy": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "hierarchy",
          "getTagHierarchy"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}/subtree": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subtree",
          "getTagSubtree"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}/path": {
      "get": {
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "path",
          "getTagPath"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}/move": {
      "patch": {
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "move",
          "moveTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}/feed-items": {
      "get": {
        "summary": "Get feed items filtered by tag",
        "description": "Get feed items filtered by tag.\n- `includeChildren=true`で子孫タグも含めます。",
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "includeChildren",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "feed_items",
          "getFeedItemsByTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/{tagId}/subscriptions": {
      "get": {
        "summary": "Get subscriptions filtered by tag",
        "description": "Get subscriptions filtered by tag.\n- `includeChildren=true`で子孫タグも含めます。",
        "tags": [],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "includeChildren",
            "in": "query",
            "schema": {
              "type": "boolean"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subscriptions",
          "getSubscriptionsByTag"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/feed-items/{feedItemId}/bulk": {
      "post": {
        "summary": "Tag feed item with multiple tags",
        "description": "Tag feed item with multiple tags.",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "feed_items",
          "bulk",
          "tagFeedItem"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/tags/subscriptions/{subscriptionId}/bulk": {
      "post": {
        "summary": "Tag subscription with multiple tags",
        "description": "Tag subscription with multiple tags.",
        "tags": [],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "tags",
          "subscriptions",
          "bulk",
          "tagSubscription"
        ],
        "x-samchon-controller": "TagController"
      }
    },
    "/summary": {
      "post": {
        "description": "Create a new summary",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "summary",
          "createSummary"
        ],
        "x-samchon-controller": "SummaryController"
      }
    },
    "/podcast-episodes": {
      "get": {
        "description": "Get user podcast episodes with pagination",
        "tags": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "getEpisodes"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      },
      "post": {
        "description": "Create a new podcast episode",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "createEpisode"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      }
    },
    "/podcast-episodes/{id}": {
      "get": {
        "description": "Get a specific podcast episode by ID",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "getEpisodeById"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      },
      "put": {
        "description": "Update a podcast episode",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "updateEpisode"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      },
      "delete": {
        "description": "Soft delete a podcast episode",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "deleteEpisode"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      }
    },
    "/podcast-episodes/generate": {
      "post": {
        "description": "Generate a new podcast episode from a summary",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast_episodes",
          "generate",
          "generateEpisode"
        ],
        "x-samchon-controller": "PodcastEpisodeController"
      }
    },
    "/podcast/config": {
      "get": {
        "description": "Get podcast settings",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast",
          "config",
          "getPodcastConfig"
        ],
        "x-samchon-controller": "PodcastConfigController"
      },
      "put": {
        "description": "Update podcast settings",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "podcast",
          "config",
          "updatePodcastConfig"
        ],
        "x-samchon-controller": "PodcastConfigController"
      }
    },
    "/feed": {
      "get": {
        "description": "List subscriptions (paginated)",
        "tags": [],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "getSubscriptions"
        ],
        "x-samchon-controller": "FeedController"
      },
      "post": {
        "description": "Subscribe to a new RSS feed",
        "tags": [],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "addSubscription"
        ],
        "x-samchon-controller": "FeedController"
      }
    },
    "/feed/{id}/fetch": {
      "post": {
        "description": "Fetch subscription now",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "fetch",
          "fetchSubscription"
        ],
        "x-samchon-controller": "FeedController"
      }
    },
    "/feed/{id}/items": {
      "get": {
        "description": "List feed items for a subscription (paginated)",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "items",
          "getSubscriptionItems"
        ],
        "x-samchon-controller": "FeedController"
      }
    },
    "/feed/{id}": {
      "patch": {
        "description": "Update subscription (partial)",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "updateSubscription"
        ],
        "x-samchon-controller": "FeedController"
      },
      "delete": {
        "description": "Delete subscription",
        "tags": [],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "feed",
          "deleteSubscription"
        ],
        "x-samchon-controller": "FeedController"
      }
    },
    "/favorites": {
      "get": {
        "description": "Favorites list",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "favorites",
          "getUserFavorites"
        ],
        "x-samchon-controller": "FavoriteController"
      }
    },
    "/favorites/{feedItemId}/is-favorited": {
      "get": {
        "description": "Favorite check",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "favorites",
          "is_favorited",
          "checkFavorite"
        ],
        "x-samchon-controller": "FavoriteController"
      }
    },
    "/favorites/{feedItemId}": {
      "post": {
        "description": "Favorite a feed item",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "favorites",
          "favoriteItem"
        ],
        "x-samchon-controller": "FavoriteController"
      },
      "delete": {
        "description": "Unfavorite a feed item",
        "tags": [],
        "parameters": [
          {
            "name": "feedItemId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "favorites",
          "unfavoriteItem"
        ],
        "x-samchon-controller": "FavoriteController"
      }
    },
    "/search/all": {
      "get": {
        "description": "Search across all content types",
        "tags": [],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "types",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "search",
          "all",
          "searchAll"
        ],
        "x-samchon-controller": "SearchController"
      }
    },
    "/search/feed-items": {
      "get": {
        "description": "Search only feed items using vector similarity",
        "tags": [],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "search",
          "feed_items",
          "searchFeedItems"
        ],
        "x-samchon-controller": "SearchController"
      }
    },
    "/search/summaries": {
      "get": {
        "description": "Search only daily summaries using vector similarity",
        "tags": [],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "search",
          "summaries",
          "searchSummaries"
        ],
        "x-samchon-controller": "SearchController"
      }
    },
    "/search/podcasts": {
      "get": {
        "description": "Search only podcast episodes using vector similarity",
        "tags": [],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "threshold",
            "in": "query",
            "schema": {
              "type": "number"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "search",
          "podcasts",
          "searchPodcasts"
        ],
        "x-samchon-controller": "SearchController"
      }
    },
    "/summaries/users/{userId}/regenerate": {
      "post": {
        "description": "Regenerate summary for a user",
        "tags": [],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "summaries",
          "users",
          "regenerate",
          "regenerateSummary"
        ],
        "x-samchon-controller": "SummaryController"
      }
    },
    "/scripts/summaries/{summaryId}/regenerate": {
      "post": {
        "description": "Regenerate script_text for a specific summary",
        "tags": [],
        "parameters": [
          {
            "name": "summaryId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {}
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "x-samchon-accessor": [
          "scripts",
          "summaries",
          "regenerate",
          "regenerateScript"
        ],
        "x-samchon-controller": "SummaryController"
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [],
  "x-samchon-emended-v4": true
}